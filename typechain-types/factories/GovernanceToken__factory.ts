/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceToken,
  GovernanceTokenInterface,
} from "../GovernanceToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reserveContractAddress",
        type: "address",
      },
    ],
    name: "setReserveContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610140604052600a80546001600160a01b031916905569d3c21bcecceda1000000600b553480156200003057600080fd5b5060405180604001604052806005815260200164141a5d9bdd60da1b81525080604051806040016040528060018152602001603160f81b81525060405180604001604052806005815260200164141a5d9bdd60da1b8152506040518060400160405280600381526020016214159560ea1b8152508160039080519060200190620000bc92919062000737565b508051620000d290600490602084019062000737565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525050600b54620001759033906200017b565b6200085b565b6200019282826200019660201b62000af71760201c565b5050565b620001ad82826200024d60201b62000b871760201c565b6001600160e01b03620001c16200031a8216565b11156200022e5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b62000247600962000c526200032060201b178362000335565b50505050565b6001600160a01b038216620002a55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000225565b8060026000828254620002b99190620007e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200019260008383620004cc565b60025490565b60006200032e8284620007e9565b9392505050565b82546000908190818115620003955762000364876200035660018562000804565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152620003aa565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350620003c884868860201c565b9250600082118015620003e15750805163ffffffff1643145b156200043857620003fd83620004e460201b62000c5e1760201c565b6200040f886200035660018662000804565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055620004bd565b8660405180604001604052806200045a436200055360201b62000ccb1760201c565b63ffffffff1681526020016200047b86620004e460201b62000c5e1760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b620004c7838383620005ba60201b62000d301760201c565b60006001600160e01b038211156200054f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000225565b5090565b600063ffffffff8211156200054f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000225565b620005d2838383620004c760201b62000d621760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620004c792918216911683818314801590620006115750600081115b15620004c7576001600160a01b038316156200069e576001600160a01b0383166000908152600860209081526040822082916200065b919062000729901b62000d67178562000335565b91509150846001600160a01b031660008051602062002787833981519152838360405162000693929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620004c7576001600160a01b038216600090815260086020908152604082208291620006e2919062000320901b62000c52178562000335565b91509150836001600160a01b03166000805160206200278783398151915283836040516200071a929190918252602082015260400190565b60405180910390a25050505050565b60006200032e828462000804565b82805462000745906200081e565b90600052602060002090601f016020900481019282620007695760008555620007b4565b82601f106200078457805160ff1916838001178555620007b4565b82800160010185558215620007b4579182015b82811115620007b457825182559160200191906001019062000797565b506200054f9291505b808211156200054f5760008155600101620007bd565b634e487b7160e01b600052601160045260246000fd5b60008219821115620007ff57620007ff620007d3565b500190565b600082821015620008195762000819620007d3565b500390565b600181811c908216806200083357607f821691505b602082108114156200085557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051611edc620008ab60003960006110b101526000611100015260006110db015260006110340152600061105e015260006110880152611edc6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636fcfff45116100de578063a457c2d711610097578063c3cda52011610071578063c3cda5201461035b578063d505accf1461036e578063dd62ed3e14610381578063f1127ed81461039457600080fd5b8063a457c2d714610322578063a7f43acd14610335578063a9059cbb1461034857600080fd5b80636fcfff451461029057806370a08231146102b85780637ecebe00146102e15780638e539e8c146102f457806395d89b41146103075780639ab24eb01461030f57600080fd5b8063378dc3dc11610130578063378dc3dc146101f557806339509351146101fe5780633a46b1a814610211578063527a52c814610224578063587cde1e146102395780635c19a95c1461027d57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b6101806103d1565b60405161018d9190611b5e565b60405180910390f35b6101a96101a4366004611bcf565b610463565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004611bf9565b61047b565b6040516012815260200161018d565b6101bd61049f565b6101bd600b5481565b6101a961020c366004611bcf565b6104ae565b6101bd61021f366004611bcf565b6104d0565b610237610232366004611c35565b61054f565b005b610265610247366004611c35565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b03909116815260200161018d565b61023761028b366004611c35565b6105e0565b6102a361029e366004611c35565b6105ed565b60405163ffffffff909116815260200161018d565b6101bd6102c6366004611c35565b6001600160a01b031660009081526020819052604090205490565b6101bd6102ef366004611c35565b610615565b6101bd610302366004611c50565b610633565b61018061068f565b6101bd61031d366004611c35565b61069e565b6101a9610330366004611bcf565b610725565b600a54610265906001600160a01b031681565b6101a9610356366004611bcf565b6107a0565b610237610369366004611c7a565b6107ae565b61023761037c366004611cd2565b6108e4565b6101bd61038f366004611d3c565b610a48565b6103a76103a2366004611d6f565b610a73565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161018d565b6060600380546103e090611daf565b80601f016020809104026020016040519081016040528092919081815260200182805461040c90611daf565b80156104595780601f1061042e57610100808354040283529160200191610459565b820191906000526020600020905b81548152906001019060200180831161043c57829003601f168201915b5050505050905090565b600033610471818585610d73565b5060019392505050565b600033610489858285610e97565b610494858585610f0b565b506001949350505050565b60006104a9611027565b905090565b6000336104718185856104c18383610a48565b6104cb9190611dfa565b610d73565b60004382106105265760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b0383166000908152600860205260409020610548908361114e565b9392505050565b600a546001600160a01b0316156105be5760405162461bcd60e51b815260206004820152602d60248201527f5265736572766520436f6e747261637420416464726573732068617320616c7260448201526c1958591e481899595b881cd95d609a1b606482015260840161051d565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6105ea3382611245565b50565b6001600160a01b03811660009081526008602052604081205461060f90610ccb565b92915050565b6001600160a01b03811660009081526005602052604081205461060f565b60004382106106845760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161051d565b61060f60098361114e565b6060600480546103e090611daf565b6001600160a01b0381166000908152600860205260408120548015610712576001600160a01b03831660009081526008602052604090206106e0600183611e12565b815481106106f0576106f0611e29565b60009182526020909120015464010000000090046001600160e01b0316610715565b60005b6001600160e01b03169392505050565b600033816107338286610a48565b9050838110156107935760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161051d565b6104948286868403610d73565b600033610471818585610f0b565b834211156107fe5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161051d565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b038816918101919091526060810186905260808101859052600090610878906108709060a001604051602081830303815290604052805190602001206112be565b85858561130c565b905061088381611334565b86146108d15760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161051d565b6108db8188611245565b50505050505050565b834211156109345760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161051d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109638c611334565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109be826112be565b905060006109ce8287878761130c565b9050896001600160a01b0316816001600160a01b031614610a315760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161051d565b610a3c8a8a8a610d73565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610ab757610ab7611e29565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610b018282610b87565b6002546001600160e01b031015610b735760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161051d565b610b816009610c528361135c565b50505050565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161051d565b8060026000828254610bef9190611dfa565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c4e600083836114b0565b5050565b60006105488284611dfa565b60006001600160e01b03821115610cc75760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161051d565b5090565b600063ffffffff821115610cc75760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161051d565b6001600160a01b03838116600090815260076020526040808220548584168352912054610d62929182169116836114bb565b505050565b60006105488284611e12565b6001600160a01b038316610dd55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161051d565b6001600160a01b038216610e365760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161051d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ea38484610a48565b90506000198114610b815781811015610efe5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161051d565b610b818484848403610d73565b600a546001600160a01b03161561101c57600a546040516323a4938f60e21b81526001600160a01b038581166004830152909116908190638e924e3c90602401602060405180830381600087803b158015610f6557600080fd5b505af1158015610f79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9d9190611e3f565b506040516323a4938f60e21b81526001600160a01b038481166004830152821690638e924e3c90602401602060405180830381600087803b158015610fe157600080fd5b505af1158015610ff5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110199190611e3f565b50505b610d628383836115f8565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561108057507f000000000000000000000000000000000000000000000000000000000000000046145b156110aa57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156111a8576000611169846117a2565b6111739085611e12565b600088815260209020909150869082015463ffffffff161115611198578091506111a6565b6111a3816001611dfa565b92505b505b808210156111f55760006111bc8383611887565b600088815260209020909150869082015463ffffffff1611156111e1578091506111ef565b6111ec816001611dfa565b92505b506111a8565b801561122f576112188661120a600184611e12565b600091825260209091200190565b5464010000000090046001600160e01b0316611232565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610b818284836114bb565b600061060f6112cb611027565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061131d878787876118a2565b9150915061132a81611966565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b825460009081908181156113a9576113798761120a600185611e12565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b031660208201526113be565b60408051808201909152600080825260208201525b905080602001516001600160e01b031693506113de84868863ffffffff16565b92506000821180156113f65750805163ffffffff1643145b1561143b5761140483610c5e565b6114138861120a600186611e12565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790556114a6565b86604051806040016040528061145043610ccb565b63ffffffff16815260200161146486610c5e565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b610d62838383610d30565b816001600160a01b0316836001600160a01b0316141580156114dd5750600081115b15610d62576001600160a01b0383161561156b576001600160a01b0383166000908152600860205260408120819061151890610d678561135c565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611560929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610d62576001600160a01b038216600090815260086020526040812081906115a190610c528561135c565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516115e9929190918252602082015260400190565b60405180910390a25050505050565b6001600160a01b03831661165c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161051d565b6001600160a01b0382166116be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161051d565b6001600160a01b038316600090815260208190526040902054818110156117365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161051d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610b818484846114b0565b6000816117b157506000919050565b600060016117be84611ab4565b901c6001901b905060018184816117d7576117d7611e58565b048201901c905060018184816117ef576117ef611e58565b048201901c9050600181848161180757611807611e58565b048201901c9050600181848161181f5761181f611e58565b048201901c9050600181848161183757611837611e58565b048201901c9050600181848161184f5761184f611e58565b048201901c9050600181848161186757611867611e58565b048201901c90506105488182858161188157611881611e58565b04611b48565b60006118966002848418611e6e565b61054890848416611dfa565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156118d9575060009050600361195d565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561192d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119565760006001925092505061195d565b9150600090505b94509492505050565b600081600481111561197a5761197a611e90565b14156119835750565b600181600481111561199757611997611e90565b14156119e55760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161051d565b60028160048111156119f9576119f9611e90565b1415611a475760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161051d565b6003816004811115611a5b57611a5b611e90565b14156105ea5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161051d565b600080608083901c15611ac957608092831c92015b604083901c15611adb57604092831c92015b602083901c15611aed57602092831c92015b601083901c15611aff57601092831c92015b600883901c15611b1157600892831c92015b600483901c15611b2357600492831c92015b600283901c15611b3557600292831c92015b600183901c1561060f5760010192915050565b6000818310611b575781610548565b5090919050565b600060208083528351808285015260005b81811015611b8b57858101830151858201604001528201611b6f565b81811115611b9d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611bca57600080fd5b919050565b60008060408385031215611be257600080fd5b611beb83611bb3565b946020939093013593505050565b600080600060608486031215611c0e57600080fd5b611c1784611bb3565b9250611c2560208501611bb3565b9150604084013590509250925092565b600060208284031215611c4757600080fd5b61054882611bb3565b600060208284031215611c6257600080fd5b5035919050565b803560ff81168114611bca57600080fd5b60008060008060008060c08789031215611c9357600080fd5b611c9c87611bb3565b95506020870135945060408701359350611cb860608801611c69565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611ced57600080fd5b611cf688611bb3565b9650611d0460208901611bb3565b95506040880135945060608801359350611d2060808901611c69565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611d4f57600080fd5b611d5883611bb3565b9150611d6660208401611bb3565b90509250929050565b60008060408385031215611d8257600080fd5b611d8b83611bb3565b9150602083013563ffffffff81168114611da457600080fd5b809150509250929050565b600181811c90821680611dc357607f821691505b6020821081141561135657634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611e0d57611e0d611de4565b500190565b600082821015611e2457611e24611de4565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611e5157600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082611e8b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220ad6b4cb8f452ab93713796fcd53614ce5cf78e69c6e9dca0f9949cee970b87f564736f6c63430008090033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type GovernanceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceToken__factory extends ContractFactory {
  constructor(...args: GovernanceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GovernanceToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceToken> {
    return super.deploy(overrides || {}) as Promise<GovernanceToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernanceToken {
    return super.attach(address) as GovernanceToken;
  }
  connect(signer: Signer): GovernanceToken__factory {
    return super.connect(signer) as GovernanceToken__factory;
  }
  static readonly contractName: "GovernanceToken";
  public readonly contractName: "GovernanceToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTokenInterface {
    return new utils.Interface(_abi) as GovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as GovernanceToken;
  }
}
