/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernanceToken,
  GovernanceTokenInterface,
} from "../GovernanceToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initialSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reserveContractAddress",
        type: "address",
      },
    ],
    name: "setReserveContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x610140604052600a80546001600160a01b031916905569d3c21bcecceda1000000600b553480156200003057600080fd5b5060405180604001604052806005815260200164141a5d9bdd60da1b81525080604051806040016040528060018152602001603160f81b81525060405180604001604052806005815260200164141a5d9bdd60da1b8152506040518060400160405280600381526020016214159560ea1b8152508160039080519060200190620000bc92919062000737565b508051620000d290600490602084019062000737565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525050600b54620001759033906200017b565b6200085b565b6200019282826200019660201b62000b4d1760201c565b5050565b620001ad82826200024d60201b62000bdd1760201c565b6001600160e01b03620001c16200031a8216565b11156200022e5760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084015b60405180910390fd5b62000247600962000ca86200032060201b178362000335565b50505050565b6001600160a01b038216620002a55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000225565b8060026000828254620002b99190620007e9565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36200019260008383620004cc565b60025490565b60006200032e8284620007e9565b9392505050565b82546000908190818115620003955762000364876200035660018562000804565b600091825260209091200190565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152620003aa565b60408051808201909152600080825260208201525b905080602001516001600160e01b03169350620003c884868860201c565b9250600082118015620003e15750805163ffffffff1643145b156200043857620003fd83620004e460201b62000cb41760201c565b6200040f886200035660018662000804565b80546001600160e01b03929092166401000000000263ffffffff909216919091179055620004bd565b8660405180604001604052806200045a436200055360201b62000d211760201c565b63ffffffff1681526020016200047b86620004e460201b62000cb41760201c565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b505050565b620004c7838383620005ba60201b62000d861760201c565b60006001600160e01b038211156200054f5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840162000225565b5090565b600063ffffffff8211156200054f5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840162000225565b620005d2838383620004c760201b62000db81760201c565b6001600160a01b03838116600090815260076020526040808220548584168352912054620004c792918216911683818314801590620006115750600081115b15620004c7576001600160a01b038316156200069e576001600160a01b0383166000908152600860209081526040822082916200065b919062000729901b62000dbd178562000335565b91509150846001600160a01b0316600080516020620027dd833981519152838360405162000693929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615620004c7576001600160a01b038216600090815260086020908152604082208291620006e2919062000320901b62000ca8178562000335565b91509150836001600160a01b0316600080516020620027dd83398151915283836040516200071a929190918252602082015260400190565b60405180910390a25050505050565b60006200032e828462000804565b82805462000745906200081e565b90600052602060002090601f016020900481019282620007695760008555620007b4565b82601f106200078457805160ff1916838001178555620007b4565b82800160010185558215620007b4579182015b82811115620007b457825182559160200191906001019062000797565b506200054f9291505b808211156200054f5760008155600101620007bd565b634e487b7160e01b600052601160045260246000fd5b60008219821115620007ff57620007ff620007d3565b500190565b600082821015620008195762000819620007d3565b500390565b600181811c908216806200083357607f821691505b602082108114156200085557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051611f32620008ab600039600061110701526000611156015260006111310152600061108a015260006110b4015260006110de0152611f326000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636fcfff45116100de578063a457c2d711610097578063c3cda52011610071578063c3cda5201461035b578063d505accf1461036e578063dd62ed3e14610381578063f1127ed81461039457600080fd5b8063a457c2d714610322578063a7f43acd14610335578063a9059cbb1461034857600080fd5b80636fcfff451461029057806370a08231146102b85780637ecebe00146102e15780638e539e8c146102f457806395d89b41146103075780639ab24eb01461030f57600080fd5b8063378dc3dc11610130578063378dc3dc146101f557806339509351146101fe5780633a46b1a814610211578063527a52c814610224578063587cde1e146102395780635c19a95c1461027d57600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb578063313ce567146101de5780633644e515146101ed575b600080fd5b6101806103d1565b60405161018d9190611bb4565b60405180910390f35b6101a96101a4366004611c25565b610463565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004611c4f565b61047b565b6040516012815260200161018d565b6101bd61049f565b6101bd600b5481565b6101a961020c366004611c25565b6104ae565b6101bd61021f366004611c25565b6104d0565b610237610232366004611c8b565b61054f565b005b610265610247366004611c8b565b6001600160a01b039081166000908152600760205260409020541690565b6040516001600160a01b03909116815260200161018d565b61023761028b366004611c8b565b610636565b6102a361029e366004611c8b565b610643565b60405163ffffffff909116815260200161018d565b6101bd6102c6366004611c8b565b6001600160a01b031660009081526020819052604090205490565b6101bd6102ef366004611c8b565b61066b565b6101bd610302366004611ca6565b610689565b6101806106e5565b6101bd61031d366004611c8b565b6106f4565b6101a9610330366004611c25565b61077b565b600a54610265906001600160a01b031681565b6101a9610356366004611c25565b6107f6565b610237610369366004611cd0565b610804565b61023761037c366004611d28565b61093a565b6101bd61038f366004611d92565b610a9e565b6103a76103a2366004611dc5565b610ac9565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161018d565b6060600380546103e090611e05565b80601f016020809104026020016040519081016040528092919081815260200182805461040c90611e05565b80156104595780601f1061042e57610100808354040283529160200191610459565b820191906000526020600020905b81548152906001019060200180831161043c57829003601f168201915b5050505050905090565b600033610471818585610dc9565b5060019392505050565b600033610489858285610eed565b610494858585610f61565b506001949350505050565b60006104a961107d565b905090565b6000336104718185856104c18383610a9e565b6104cb9190611e50565b610dc9565b60004382106105265760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b038316600090815260086020526040902061054890836111a4565b9392505050565b600a546001600160a01b0316156105be5760405162461bcd60e51b815260206004820152602d60248201527f5265736572766520436f6e747261637420416464726573732068617320616c7260448201526c1958591e481899595b881cd95d609a1b606482015260840161051d565b6001600160a01b0381166106145760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f742062652073657420746f2061205a45524f204164647265737300604482015260640161051d565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b610640338261129b565b50565b6001600160a01b03811660009081526008602052604081205461066590610d21565b92915050565b6001600160a01b038116600090815260056020526040812054610665565b60004382106106da5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400604482015260640161051d565b6106656009836111a4565b6060600480546103e090611e05565b6001600160a01b0381166000908152600860205260408120548015610768576001600160a01b0383166000908152600860205260409020610736600183611e68565b8154811061074657610746611e7f565b60009182526020909120015464010000000090046001600160e01b031661076b565b60005b6001600160e01b03169392505050565b600033816107898286610a9e565b9050838110156107e95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161051d565b6104948286868403610dc9565b600033610471818585610f61565b834211156108545760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e61747572652065787069726564000000604482015260640161051d565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906108ce906108c69060a00160405160208183030381529060405280519060200120611314565b858585611362565b90506108d98161138a565b86146109275760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000604482015260640161051d565b610931818861129b565b50505050505050565b8342111561098a5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161051d565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109b98c61138a565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610a1482611314565b90506000610a2482878787611362565b9050896001600160a01b0316816001600160a01b031614610a875760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161051d565b610a928a8a8a610dc9565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610b0d57610b0d611e7f565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b610b578282610bdd565b6002546001600160e01b031015610bc95760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b606482015260840161051d565b610bd76009610ca8836113b2565b50505050565b6001600160a01b038216610c335760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161051d565b8060026000828254610c459190611e50565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610ca460008383611506565b5050565b60006105488284611e50565b60006001600160e01b03821115610d1d5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b606482015260840161051d565b5090565b600063ffffffff821115610d1d5760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161051d565b6001600160a01b03838116600090815260076020526040808220548584168352912054610db892918216911683611511565b505050565b60006105488284611e68565b6001600160a01b038316610e2b5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161051d565b6001600160a01b038216610e8c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161051d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610ef98484610a9e565b90506000198114610bd75781811015610f545760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161051d565b610bd78484848403610dc9565b600a546001600160a01b03161561107257600a5460405163a1314f3d60e01b81526001600160a01b03858116600483015290911690819063a1314f3d90602401602060405180830381600087803b158015610fbb57600080fd5b505af1158015610fcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff39190611e95565b5060405163a1314f3d60e01b81526001600160a01b03848116600483015282169063a1314f3d90602401602060405180830381600087803b15801561103757600080fd5b505af115801561104b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106f9190611e95565b50505b610db883838361164e565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156110d657507f000000000000000000000000000000000000000000000000000000000000000046145b1561110057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b8154600090818160058111156111fe5760006111bf846117f8565b6111c99085611e68565b600088815260209020909150869082015463ffffffff1611156111ee578091506111fc565b6111f9816001611e50565b92505b505b8082101561124b57600061121283836118dd565b600088815260209020909150869082015463ffffffff16111561123757809150611245565b611242816001611e50565b92505b506111fe565b80156112855761126e86611260600184611e68565b600091825260209091200190565b5464010000000090046001600160e01b0316611288565b60005b6001600160e01b03169695505050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610bd7828483611511565b600061066561132161107d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611373878787876118f8565b91509150611380816119bc565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b825460009081908181156113ff576113cf87611260600185611e68565b60408051808201909152905463ffffffff8116825264010000000090046001600160e01b03166020820152611414565b60408051808201909152600080825260208201525b905080602001516001600160e01b0316935061143484868863ffffffff16565b925060008211801561144c5750805163ffffffff1643145b156114915761145a83610cb4565b61146988611260600186611e68565b80546001600160e01b03929092166401000000000263ffffffff9092169190911790556114fc565b8660405180604001604052806114a643610d21565b63ffffffff1681526020016114ba86610cb4565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b5050935093915050565b610db8838383610d86565b816001600160a01b0316836001600160a01b0316141580156115335750600081115b15610db8576001600160a01b038316156115c1576001600160a01b0383166000908152600860205260408120819061156e90610dbd856113b2565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516115b6929190918252602082015260400190565b60405180910390a250505b6001600160a01b03821615610db8576001600160a01b038216600090815260086020526040812081906115f790610ca8856113b2565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405161163f929190918252602082015260400190565b60405180910390a25050505050565b6001600160a01b0383166116b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161051d565b6001600160a01b0382166117145760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161051d565b6001600160a01b0383166000908152602081905260409020548181101561178c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161051d565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610bd7848484611506565b60008161180757506000919050565b6000600161181484611b0a565b901c6001901b9050600181848161182d5761182d611eae565b048201901c9050600181848161184557611845611eae565b048201901c9050600181848161185d5761185d611eae565b048201901c9050600181848161187557611875611eae565b048201901c9050600181848161188d5761188d611eae565b048201901c905060018184816118a5576118a5611eae565b048201901c905060018184816118bd576118bd611eae565b048201901c9050610548818285816118d7576118d7611eae565b04611b9e565b60006118ec6002848418611ec4565b61054890848416611e50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561192f57506000905060036119b3565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611983573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166119ac576000600192509250506119b3565b9150600090505b94509492505050565b60008160048111156119d0576119d0611ee6565b14156119d95750565b60018160048111156119ed576119ed611ee6565b1415611a3b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161051d565b6002816004811115611a4f57611a4f611ee6565b1415611a9d5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161051d565b6003816004811115611ab157611ab1611ee6565b14156106405760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161051d565b600080608083901c15611b1f57608092831c92015b604083901c15611b3157604092831c92015b602083901c15611b4357602092831c92015b601083901c15611b5557601092831c92015b600883901c15611b6757600892831c92015b600483901c15611b7957600492831c92015b600283901c15611b8b57600292831c92015b600183901c156106655760010192915050565b6000818310611bad5781610548565b5090919050565b600060208083528351808285015260005b81811015611be157858101830151858201604001528201611bc5565b81811115611bf3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611c2057600080fd5b919050565b60008060408385031215611c3857600080fd5b611c4183611c09565b946020939093013593505050565b600080600060608486031215611c6457600080fd5b611c6d84611c09565b9250611c7b60208501611c09565b9150604084013590509250925092565b600060208284031215611c9d57600080fd5b61054882611c09565b600060208284031215611cb857600080fd5b5035919050565b803560ff81168114611c2057600080fd5b60008060008060008060c08789031215611ce957600080fd5b611cf287611c09565b95506020870135945060408701359350611d0e60608801611cbf565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611d4357600080fd5b611d4c88611c09565b9650611d5a60208901611c09565b95506040880135945060608801359350611d7660808901611cbf565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611da557600080fd5b611dae83611c09565b9150611dbc60208401611c09565b90509250929050565b60008060408385031215611dd857600080fd5b611de183611c09565b9150602083013563ffffffff81168114611dfa57600080fd5b809150509250929050565b600181811c90821680611e1957607f821691505b602082108114156113ac57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611e6357611e63611e3a565b500190565b600082821015611e7a57611e7a611e3a565b500390565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611ea757600080fd5b5051919050565b634e487b7160e01b600052601260045260246000fd5b600082611ee157634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fdfea264697066735822122042e20cde8bbd4be9851f6a7490ee684559782f2a5e9a6246296644d166bd8ca164736f6c63430008090033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type GovernanceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovernanceToken__factory extends ContractFactory {
  constructor(...args: GovernanceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "GovernanceToken";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernanceToken> {
    return super.deploy(overrides || {}) as Promise<GovernanceToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovernanceToken {
    return super.attach(address) as GovernanceToken;
  }
  connect(signer: Signer): GovernanceToken__factory {
    return super.connect(signer) as GovernanceToken__factory;
  }
  static readonly contractName: "GovernanceToken";
  public readonly contractName: "GovernanceToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceTokenInterface {
    return new utils.Interface(_abi) as GovernanceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernanceToken {
    return new Contract(address, _abi, signerOrProvider) as GovernanceToken;
  }
}
