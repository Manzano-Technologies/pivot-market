/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoolManager, PoolManagerInterface } from "../PoolManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "depositToken",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "titleString",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "reserveContractAddressInput",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "isApproved",
        type: "bool",
      },
    ],
    name: "ApprovalChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pToken",
        type: "address",
      },
    ],
    name: "EpToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
    ],
    name: "TA",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "determinationContract",
        type: "address",
      },
    ],
    name: "addDetermination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approvePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "determinationContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "pivotTargetPoolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "subgraphContract",
        type: "address",
      },
    ],
    name: "determinePivot",
    outputs: [
      {
        internalType: "bool",
        name: "pivotExecuted",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disapprovePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subgraphContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSubgraphTimeseriesDataPoint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "senderAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialDepositAmount",
        type: "uint256",
      },
    ],
    name: "initializePoolTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "latestSubgraphTimeseries",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "precision",
        type: "uint256",
      },
    ],
    name: "percent",
    outputs: [
      {
        internalType: "uint256",
        name: "quotient",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setReserveContractAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subgraphContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "dataPoint",
        type: "bytes32",
      },
    ],
    name: "setSubgraphTimeseriesDataPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "simulatePoolActivity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "title",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "userDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userToDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "userWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff60a01b1916600160a01b178155600180546001600160a01b031990811630179091556002805482169055600382905560048054821690556008805490911690556103e8600955600d553480156200006057600080fd5b5060405162002c2a38038062002c2a833981016040819052620000839162000136565b6200008e33620000c9565b600a91909155600780546001600160a01b039283166001600160a01b0319918216179091556005805493909216921691909117905562000177565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200013157600080fd5b919050565b6000806000606084860312156200014c57600080fd5b620001578462000119565b9250602084015191506200016e6040850162000119565b90509250925092565b612aa380620001876000396000f3fe60806040523480156200001157600080fd5b50600436106200015c5760003560e01c80637ad03c8f11620000c7578063cbb443a01162000086578063cbb443a014620002ff578063ce4faa8e1462000309578063dec696b4146200032c578063e96a97f01462000343578063f2fde38b1462000371578063f868e766146200038857600080fd5b80637ad03c8f14620002815780638da5cb5b146200028b5780639c84bd63146200029d578063a89fb8a314620002b1578063b262439614620002c857600080fd5b8063386cbcd81162000120578063386cbcd814620002135780633b9056bf146200022a5780633fbf604414620002415780634a79d50c146200025857806351e63e2f1462000262578063715018a6146200027757600080fd5b80622c1a9e146200016157806301ffc9a7146200018b5780631329ea8e14620001c35780631a90fec314620001dc578063303810771462000209575b600080fd5b6200017862000172366004620015f1565b6200039f565b6040519081526020015b60405180910390f35b620001b26200019c3660046200161e565b6001600160e01b03191663fa6be2a560e01b1490565b604051901515815260200162000182565b620001da620001d43660046200166e565b620003fd565b005b600854620001f0906001600160a01b031681565b6040516001600160a01b03909116815260200162000182565b620001da62000429565b620001da620002243660046200168c565b62000476565b620001da6200023b366004620016b9565b620006fc565b620001da620002523660046200166e565b62000c5e565b62000178600a5481565b600054620001b290600160a01b900460ff1681565b620001da62000d40565b620001da62000d58565b6000546001600160a01b0316620001f0565b600754620001f0906001600160a01b031681565b620001b2620002c2366004620016d3565b62000da7565b620001da620002d936600462001702565b6001600160a01b039092166000908152600b602090815260408083209383529290522055565b620001da62000e7c565b620001786200031a3660046200166e565b600c6020526000908152604090205481565b620001786200033d3660046200168c565b6200108a565b62000178620003543660046200168c565b600b60209081526000928352604080842090915290825290205481565b620001da620003823660046200166e565b620010b5565b620001da62000399366004620016b9565b62001134565b600080620003af8360016200174e565b620003bc90600a62001866565b620003c8908662001874565b90506000600a620003da868462001896565b620003e79060056200174e565b620003f3919062001896565b9695505050505050565b6200040762001336565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6200043362001336565b6000805460ff60a01b191681556040519081527fbf566f7ffac9cb664ec11d47aa078c63570d0e55e35d5cdaf12510aaf6067919906020015b60405180910390a1565b6200048062001336565b6006546001600160a01b031615620004df5760405162461bcd60e51b815260206004820152601760248201527f506f6f6c2070546f6b656e20416c72656164792073657400000000000000000060448201526064015b60405180910390fd5b600554604080516395d89b4160e01b815290516000926001600160a01b0316916395d89b419160048083019286929190829003018186803b1580156200052457600080fd5b505afa15801562000539573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000563919081019062001902565b905060006040516020016200057f90600760fc1b815260010190565b60405160208183030381529060405282604051602001620005a19190620019bb565b60408051601f1981840301815290829052620005c19291602001620019d9565b60408051601f19818403018152828252600a5460208401529250600091016040516020818303038152906040529050600082604051602001620006059190620019bb565b6040516020818303038152906040529050600082826040516200062890620015e3565b6200063592919062001a3a565b604051809103906000f08015801562000652573d6000803e3d6000fd5b50600680546001600160a01b0319166001600160a01b038381169182179092556040516340c10f1960e01b8152918a1660048301526509184e72a00060248301529192506340c10f1990604401600060405180830381600087803b158015620006ba57600080fd5b505af1158015620006cf573d6000803e3d6000fd5b5050506001600160a01b039097166000908152600c60205260409020869055505050600392909255505050565b600d8054908290600062000711838562001a6c565b909155505060035460009062000728908362001a6c565b905080156200075157600060646200074283600a62001874565b6200074e919062001896565b50505b600082116200079c5760405162461bcd60e51b8152602060048201526016602482015275506f736974696f6e20686173206e6f2061737365747360501b6044820152606401620004d6565b6000620007ac8484600d6200039f565b905060006509184e72a000600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200080657600080fd5b505afa1580156200081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000841919062001a86565b6200084d908462001874565b62000859919062001896565b6006546040516370a0823160e01b81523360048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015620008a357600080fd5b505afa158015620008b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008de919062001a86565b90506000620008ef600a8462001896565b620008fc90600a62001874565b62000908908462001a6c565b9050600581101580156200091c5750818314155b1562000932576200092f6001846200174e565b92505b60006200094083856200174e565b90507f5c5ebebf0a0b769f0625d3b851c75b1249bbbfe5417e6a4c636f59467fd67de46003546040516200097691815260200190565b60405180910390a182841115620009f8576040805162461bcd60e51b81526020600482015260248101919091527f576974686472617720616d6f756e742067726561746572207468616e2070726960448201527f6e636970616c202b20696e746572657374206f77656420746f2073656e6465726064820152608401620004d6565b336000908152600c602052604081205490818a111562000a4657336000908152600c602052604090205462000a2e908b62001a6c565b336000908152600c6020526040812055905062000a6d565b336000908152600c6020526040812080548c929062000a6790849062001a6c565b90915550505b62000a798a8a62001a6c565b60035560095460009062000a906127108462001896565b62000a9c919062001874565b9050600062000aac828d62001a6c565b9050811562000ac05762000ac08262001392565b60055460405163095ea7b360e01b8152306004820152602481018390526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801562000b0d57600080fd5b505af115801562000b22573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b48919062001aa0565b506005546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801562000b9c57600080fd5b505af115801562000bb1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bd7919062001aa0565b506006546001600160a01b031687891162000c4f5760405163079cc67960e41b8152336004820152602481018a90526001600160a01b038216906379cc679090604401600060405180830381600087803b15801562000c3557600080fd5b505af115801562000c4a573d6000803e3d6000fd5b505050505b50505050505050505050505050565b6008546001600160a01b03161562000d1e5760405162461bcd60e51b815260206004820152607060248201527f5468697320706f6f6c2068617320616c7265616479207365742061206465746560448201527f726d696e6174696f6e20636f6e74726163742e2041206e657720706f6f6c206d60648201527f757374206265206372656174656420746f20696d706c656d656e74206120646960848201526f1999995c995b9d0818dbdb9d1c9858dd60821b60a482015260c401620004d6565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b62000d4a62001336565b62000d56600062001495565b565b62000d6262001336565b6000805460ff60a01b1916600160a01b179055604051600181527fbf566f7ffac9cb664ec11d47aa078c63570d0e55e35d5cdaf12510aaf6067919906020016200046c565b336000908152600c6020526040812054600180548392906001600160a01b0316301462000e3357600062000ddb82620014e5565b905060018115151462000e315760405162461bcd60e51b815260206004820152601b60248201527f57697468647261772066756e647320756e7375636365737366756c00000000006044820152606401620004d6565b505b6003819055600280546001600160a01b0387166001600160a01b0319918216179091556001805490911681555050600480546001600160a01b0319163317905550909392505050565b600062000e9060035460035460046200039f565b90506000612710600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000ee657600080fd5b505afa15801562000efb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000f21919062001a86565b62000f2d908462001874565b62000f39919062001896565b6006546040516340c10f1960e01b81527330cf84e121f2105e638746dcccffebce65b18f7c6004820152602481018390529192506001600160a01b03169081906340c10f1990604401600060405180830381600087803b15801562000f9d57600080fd5b505af115801562000fb2573d6000803e3d6000fd5b50506005546003546040516340c10f1960e01b815230600482015260248101919091526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b1580156200100757600080fd5b505af11580156200101c573d6000803e3d6000fd5b50505050600354600262001031919062001874565b600381815562001042919062001874565b600d556006546040516001600160a01b0390911681527f8b1d45af274de9482752545729395f9d156ff645e39b3829b741963c516e7d4b9060200160405180910390a1505050565b6001600160a01b0382166000908152600b602090815260408083208484529091529020545b92915050565b620010bf62001336565b6001600160a01b038116620011265760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620004d6565b620011318162001495565b50565b60055460405163a9059cbb60e01b8152306004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156200118157600080fd5b505af115801562001196573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bc919062001aa0565b50336000908152600c602052604081208054839290620011de9084906200174e565b925050819055508060036000828254620011f991906200174e565b9091555050336000908152600c6020526040812054906200121d838360046200039f565b90506000612710600660009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200127357600080fd5b505afa15801562001288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012ae919062001a86565b620012ba908462001874565b620012c6919062001896565b6006546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b03169081906340c10f1990604401600060405180830381600087803b1580156200131657600080fd5b505af11580156200132b573d6000803e3d6000fd5b505050505050505050565b6000546001600160a01b0316331462000d565760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620004d6565b60055460075460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b390604401602060405180830381600087803b158015620013e357600080fd5b505af1158015620013f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200141e919062001aa0565b5060075460055460405163860539c560e01b81523060048201526001600160a01b03918216602482015260448101849052911690819063860539c590606401600060405180830381600087803b1580156200147857600080fd5b505af11580156200148d573d6000803e3d6000fd5b505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600060035484620014fb919062001a6c565b9050600060646200150e83600a62001874565b6200151a919062001896565b6005546004805460405163a9059cbb60e01b81526001600160a01b03918216928101929092526024820184905292935091169063a9059cbb90604401602060405180830381600087803b1580156200157157600080fd5b505af115801562001586573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015ac919062001aa0565b50620015b9828662001a6c565b6003555050600280546001600160a01b031990811690915560018054909116301781559392505050565b610fa98062001ac583390190565b6000806000606084860312156200160757600080fd5b505081359360208301359350604090920135919050565b6000602082840312156200163157600080fd5b81356001600160e01b0319811681146200164a57600080fd5b9392505050565b80356001600160a01b03811681146200166957600080fd5b919050565b6000602082840312156200168157600080fd5b6200164a8262001651565b60008060408385031215620016a057600080fd5b620016ab8362001651565b946020939093013593505050565b600060208284031215620016cc57600080fd5b5035919050565b60008060408385031215620016e757600080fd5b82359150620016f96020840162001651565b90509250929050565b6000806000606084860312156200171857600080fd5b620017238462001651565b95602085013595506040909401359392505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111562001764576200176462001738565b500190565b600181815b80851115620017aa5781600019048211156200178e576200178e62001738565b808516156200179c57918102915b93841c93908002906200176e565b509250929050565b600082620017c357506001620010af565b81620017d257506000620010af565b8160018114620017eb5760028114620017f65762001816565b6001915050620010af565b60ff8411156200180a576200180a62001738565b50506001821b620010af565b5060208310610133831016604e8410600b84101617156200183b575081810a620010af565b62001847838362001769565b80600019048211156200185e576200185e62001738565b029392505050565b60006200164a8383620017b2565b600081600019048311821515161562001891576200189162001738565b500290565b600082620018b457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620018ec578181015183820152602001620018d2565b83811115620018fc576000848401525b50505050565b6000602082840312156200191557600080fd5b815167ffffffffffffffff808211156200192e57600080fd5b818401915084601f8301126200194357600080fd5b815181811115620019585762001958620018b9565b604051601f8201601f19908116603f01168101908382118183101715620019835762001983620018b9565b816040528281528760208487010111156200199d57600080fd5b620019b0836020830160208801620018cf565b979650505050505050565b60008251620019cf818460208701620018cf565b9190910192915050565b60008351620019ed818460208801620018cf565b83519083019062001a03818360208801620018cf565b01949350505050565b6000815180845262001a26816020860160208601620018cf565b601f01601f19169290920160200192915050565b60408152600062001a4f604083018562001a0c565b828103602084015262001a63818562001a0c565b95945050505050565b60008282101562001a815762001a8162001738565b500390565b60006020828403121562001a9957600080fd5b5051919050565b60006020828403121562001ab357600080fd5b815180151581146200164a57600080fdfe60806040523480156200001157600080fd5b5060405162000fa938038062000fa9833981016040819052620000349162000251565b8151829082906200004d906003906020850190620000de565b50805162000063906004906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f8565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b60208210811415620002f257634e487b7160e01b600052602260045260246000fd5b50919050565b610ca180620003086000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610ac5565b60405180910390f35b61014161013c366004610b36565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610b60565b61031d565b60405160128152602001610125565b610141610193366004610b36565b610341565b6101ab6101a6366004610b36565b610363565b005b6101ab6101bb366004610b9c565b610379565b6101556101ce366004610bb5565b6001600160a01b031660009081526020819052604090205490565b6101ab610386565b6101ab6101ff366004610b36565b61039a565b6005546040516001600160a01b039091168152602001610125565b6101186103af565b610141610235366004610b36565b6103be565b610141610248366004610b36565b61043e565b61015561025b366004610bd7565b61044c565b6101ab61026e366004610bb5565b610477565b60606003805461028290610c0a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610c0a565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b6000336103138185856104ed565b5060019392505050565b60003361032b858285610612565b61033685858561068c565b506001949350505050565b600033610313818585610354838361044c565b61035e9190610c45565b6104ed565b61036b610830565b610375828261088a565b5050565b6103833382610949565b50565b61038e610830565b6103986000610a73565b565b6103a5823383610612565b6103758282610949565b60606004805461028290610c0a565b600033816103cc828661044c565b9050838110156104315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61033682868684036104ed565b60003361031381858561068c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61047f610830565b6001600160a01b0381166104e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610428565b61038381610a73565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610428565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610428565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061061e848461044c565b9050600019811461068657818110156106795760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610428565b61068684848484036104ed565b50505050565b6001600160a01b0383166106f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610428565b6001600160a01b0382166107525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610428565b6001600160a01b038316600090815260208190526040902054818110156107ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610428565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610686565b6005546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610428565b6001600160a01b0382166108e05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610428565b80600260008282546108f29190610c45565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0382166109a95760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610428565b6001600160a01b03821660009081526020819052604090205481811015610a1d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610428565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610605565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610af257858101830151858201604001528201610ad6565b81811115610b04576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b3157600080fd5b919050565b60008060408385031215610b4957600080fd5b610b5283610b1a565b946020939093013593505050565b600080600060608486031215610b7557600080fd5b610b7e84610b1a565b9250610b8c60208501610b1a565b9150604084013590509250925092565b600060208284031215610bae57600080fd5b5035919050565b600060208284031215610bc757600080fd5b610bd082610b1a565b9392505050565b60008060408385031215610bea57600080fd5b610bf383610b1a565b9150610c0160208401610b1a565b90509250929050565b600181811c90821680610c1e57607f821691505b60208210811415610c3f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c6657634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220cbbfe39938a1b68a781a75ff8996d18f62f3b89f19b09b474db6480bb7f6089a64736f6c63430008090033a2646970667358221220fcfd516ac698e5d3c6053635fdcd4be25ec9babfbd8cb2cfa20c82f9809824ee64736f6c63430008090033";

type PoolManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolManager__factory extends ContractFactory {
  constructor(...args: PoolManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PoolManager";
  }

  deploy(
    depositToken: string,
    titleString: BytesLike,
    reserveContractAddressInput: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolManager> {
    return super.deploy(
      depositToken,
      titleString,
      reserveContractAddressInput,
      overrides || {}
    ) as Promise<PoolManager>;
  }
  getDeployTransaction(
    depositToken: string,
    titleString: BytesLike,
    reserveContractAddressInput: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      depositToken,
      titleString,
      reserveContractAddressInput,
      overrides || {}
    );
  }
  attach(address: string): PoolManager {
    return super.attach(address) as PoolManager;
  }
  connect(signer: Signer): PoolManager__factory {
    return super.connect(signer) as PoolManager__factory;
  }
  static readonly contractName: "PoolManager";
  public readonly contractName: "PoolManager";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolManagerInterface {
    return new utils.Interface(_abi) as PoolManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolManager {
    return new Contract(address, _abi, signerOrProvider) as PoolManager;
  }
}
